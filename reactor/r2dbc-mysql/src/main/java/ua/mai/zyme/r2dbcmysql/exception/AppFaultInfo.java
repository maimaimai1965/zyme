package ua.mai.zyme.r2dbcmysql.exception;

import org.springframework.http.HttpStatus;

public enum AppFaultInfo implements FaultInfo {

    UNEXPECTED_ERROR(FaultInfo.UNEXPECTED_ERROR_CODE, FaultInfo.UNEXPECTED_ERROR_TEMPLATE, FaultInfo.UNEXPECTED_ERROR_HTTPSTATUS),
    NOT_FOUND(FaultInfo.NOT_FOUND_CODE, FaultInfo.NOT_FOUND_TEMPLATE, FaultInfo.NOT_FOUND_HTTPSTATUS),

    MEMBER_NOT_EXISTS("ERR100", "Member not exists (memberId={0})"),
    NEW_MEMBER_ID_MUST_BE_NULL("ERR101", "New member id must be null (memberId is autogenerated)"),
    UPDATED_MEMBER_ID_MUST_NOT_BE_NULL("ERR102", "Existed member id must be not null"),

    BALANCE_FOR_MEMBER_NOT_EXISTS("ERR300", "Balance for member (memberId={0}) not exists"),
    BALANCE_AMOUNT_CANNOT_BE_NEGATIVE("ERR301", "Amount in balance can't be negative (memberId={0}, amount={1})"),
    BALANCE_CHANGE_DATE_EARLIER_LAST_DATE("ERR302", "You cannot change a balance with a change date prior to the last change date (memberId={0}, lastModifiedDate={1}, modifiedDate={2})"),
    BALANCE_AMOUNT_NOT_ENOUGH("ERR303", "Not enough amount on balance (memberId={0}, amount={1}, delta={2})"),

    TRANSFER_FROM_MEMBER_NOT_EXISTS("ERR400", "From member in transfer not exists"),
    TRANSFER_TO_MEMBER_NOT_EXISTS("ERR400", "To member in transfer not exists"),
    ;

    private final String code;
    private final String messageTemplate;
    private final HttpStatus httpStatus;

    AppFaultInfo(String code, String messageTemplate, HttpStatus httpStatus) {
        this.code = code;
        this.messageTemplate = messageTemplate;
        this.httpStatus = httpStatus;
    }

    AppFaultInfo(String code, String messageTemplate) {
        this.code = code;
        this.messageTemplate = messageTemplate;
        this.httpStatus = FaultInfo.DEFAUILT_SERVICE_FAULT_ERROR_HTTPSTATUS;
    }

    @Override
    public String code() {
        return code;
    }

    @Override
    public String messageTemplate() {
        return messageTemplate;
    }

    @Override
    public HttpStatus httpStatus() {
        return httpStatus;
    }

}
