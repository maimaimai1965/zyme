package ua.mai.zyme.r2dbcmysql.exception

import org.springframework.http.HttpStatus

enum class AppFaultInfo(

    private val code: String,
    private val messageTemplate: String,
    private val httpStatus: HttpStatus = FaultInfo.DEFAULT_SERVICE_FAULT_ERROR_HTTPSTATUS

) : FaultInfo {

    UNEXPECTED_ERROR(
        FaultInfo.UNEXPECTED_ERROR_CODE,
        FaultInfo.UNEXPECTED_ERROR_TEMPLATE,
        FaultInfo.UNEXPECTED_ERROR_HTTPSTATUS
    ),
    NOT_FOUND(
        FaultInfo.NOT_FOUND_CODE,
        FaultInfo.NOT_FOUND_TEMPLATE,
        FaultInfo.NOT_FOUND_HTTPSTATUS
    ),

    MEMBER_NOT_FOUND("ERR100", "Member not found (memberId={0})"),
    NEW_MEMBER_ID_MUST_BE_NULL("ERR101", "New member id must be null (memberId is autogenerated)"),
    UPDATED_MEMBER_ID_MUST_NOT_BE_NULL("ERR102", "Existed member id must be not null"),

    BALANCE_FOR_MEMBER_NOT_FOUND("ERR300", "Balance for member (memberId={0}) not found"),
    BALANCE_AMOUNT_CANNOT_BE_NEGATIVE("ERR301", "Amount in balance can't be negative (memberId={0}, amount={1})"),
    BALANCE_CHANGE_DATE_EARLIER_LAST_DATE(
        "ERR302",
        "You cannot change a balance with a change date prior to the last change date (memberId={0}, lastModifiedDate={1}, modifiedDate={2})"
    ),
    BALANCE_AMOUNT_NOT_ENOUGH("ERR303", "Not enough amount on balance (memberId={0}, amount={1}, delta={2})"),
    BALANCE_NOT_CREATED("ERR304", "Balance for member not created (memberId={0}, amount={1})"),

    TRANSFER_FROM_MEMBER_NOT_FOUND("ERR400", "fromMemberId in transfer not found"),
    TRANSFER_TO_MEMBER_NOT_FOUND("ERR401", "toMemberId in transfer not found"),
    TRANSFER_AMOUNT_MUST_BE_POSITIVE("ERR402", "Transfer amount must be positive");

    override fun code(): String = code
    override fun messageTemplate(): String = messageTemplate
    override fun httpStatus(): HttpStatus = httpStatus
}