
enum Gender {
    MALE
    FEMALE
}

type Book {
    id: ID!
    name: String!
    authorIds: [ID]
    authors: [Author]
    pageCount: Int
    publisherId: ID
    publisher: Publisher
    lang: Locale
}

type Author {
    id: ID!
    firstName: String!
    lastName: String
    gender: Gender
}

type Publisher {
    id: ID!
    name: String!
}

# Book -------------------------------
type BookPayLoad {
    book: Book
}

input BookCreateInput{
    id: ID
    name: String!
    authorIds: [ID]
    pageCount: Int
    publisherId: ID
    lang: Locale
}

input BookUpdateInput{
    id: ID!
    name: String
    authorIds: [ID]
    pageCount: Int
    publisherId: ID
    lang: Locale
    #
    nameSetNull: Boolean
    authorIdsSetNull: Boolean
    pageCountSetNull: Boolean
    publisherIdSetNull: Boolean
    langSetNull: Boolean
}

# Author -------------------------------
type AuthorPayLoad {
    author: Author
}

input AuthorCreateInput {
    id: ID
    firstName: String!
    lastName: String
    gender: Gender
}

input AuthorUpdateInput{
    id: ID
    firstName: String!
    lastName: String
    gender: Gender
    #
    firstNameSetNull: Boolean
    lastNameSetNull: Boolean
    genderSetNull: Boolean
}


#fragment bookDetails on Book {
#    id
#    name
#}
#
#fragment bookAuthor on Author {
#    id
#    firstName
#}

